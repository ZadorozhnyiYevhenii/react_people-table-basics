{"version":3,"sources":["pages/HomaPage.tsx","components/Loader/Loader.tsx","components/Loader/PersonLink.tsx","api.ts","components/Loader/PeopleTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","PersoLink","person","userSlug","useParams","classNames","slug","to","sex","name","born","died","mother","motherName","father","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleTable","useState","people","setPeople","error","setError","loading","setLoading","fetchPeople","peopleFormServer","childrenWithParents","map","find","useEffect","noPeopleOnServer","length","PeoplePage","App","linkClassName","isActive","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6d992adf.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersoLink: React.FC<Props> = ({ person }) => {\n  const { userSlug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': person.slug === userSlug,\n      })}\n    >\n      <td>\n        <Link\n          to={`/people/${person.slug}`}\n          className={classNames({ 'has-text-danger': person.sex === 'f' })}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother ? (\n          <Link\n            to={`/people/${person.mother.slug}`}\n          >\n            {person.motherName}\n          </Link>\n        ) : (person.motherName || '-')}\n      </td>\n\n      <td>\n        {person.father ? (\n          <Link\n            to={`/people/${person.father.slug}`}\n          >\n            {person.fatherName}\n          </Link>\n        ) : (person.fatherName || '-')}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { PersoLink } from './PersonLink';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\n\nexport const PeopleTable: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const fetchPeople = async () => {\n    setLoading(true);\n    setError(false);\n\n    try {\n      const peopleFormServer = await getPeople();\n      const childrenWithParents = peopleFormServer.map(person => ({\n        ...person,\n        father: peopleFormServer\n          .find(father => father.name === person.fatherName),\n        mother: peopleFormServer\n          .find(mother => mother.name === person.motherName),\n      }));\n\n      setPeople(childrenWithParents);\n    } catch {\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  const noPeopleOnServer = !people.length && !error && !loading;\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {loading && <Loader />}\n\n        {error && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {noPeopleOnServer && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {people.length !== 0 && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n            <tbody>\n              {people.map(person => (\n                <PersoLink\n                  key={person.slug}\n                  person={person}\n                />\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { PeopleTable } from '../components/Loader/PeopleTable';\n\nexport const PeoplePage = () => {\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <PeopleTable />\n    </>\n  );\n};\n","import classNames from 'classnames';\n\nimport './App.scss';\nimport {\n  NavLink,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { HomePage } from './pages/HomaPage';\n\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => {\n  const linkClassName = ({ isActive }: { isActive: boolean }) => classNames(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={linkClassName}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={linkClassName}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":userSlug\" element={<PeoplePage />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}